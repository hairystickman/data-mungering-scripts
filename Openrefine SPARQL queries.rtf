{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 CourierNewPSMT;
\f3\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red38\green38\blue38;\red245\green245\blue245;
\red39\green79\blue173;\red246\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c20000\c20000\c20000;\cssrgb\c96863\c96863\c96863;
\cssrgb\c20000\c40000\c73333;\cssrgb\c97255\c97647\c98039;}
{\info
{\author gapantos}}\paperw11900\paperh16840\margl1440\margr1440\vieww25620\viewh16340\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
Notes on using Open Refine and URL encoded SPARQL commands for matching keywords to getty AAT vocab.\
Note, this is only required once (or occasionally) for building a concordance table for keywords lists, but can be used to generate full \'91parent\'92 paths if using nested hierarchy in lightroom
\f1\b0\fs24 \cf2 \
\
Until getty correct their API, the best way is to add a temporary column with ->columns - add columns blah URL.\
then use.\
\
\pard\pardeftab720\sl280\partightenfactor0

\f0\b \cf2 Getting ID from Getty.  Based on:
\f1\b0 \
{\field{\*\fldinst{HYPERLINK "http://web.archive.org/web/20150109232241/http://answers.semanticweb.com:80/questions/29533/how-to-add-getty-aat-to-sparql-based-reconciliation-service-using-openrefine"}}{\fldrslt http://web.archive.org/web/20150109232241/http://answers.semanticweb.com:80/questions/29533/how-to-add-getty-aat-to-sparql-based-reconciliation-service-using-openrefine}}\
\
Get ID (Note. Needs to be cleaned to be specific first otherwise will return ID for wrong term). Fuzzy search for preferred label only - try this, then get the discription and cross referene before continuing\
\pard\pardeftab720\partightenfactor0

\f2\fs21\fsmilli10667 \cf3 \cb4 'http://vocab.getty.edu/sparql.json?query=select+distinct*\{?x+skos:inScheme+aat:;(xl:prefLabel)/gvp:term"' + escape(value, 'url') + '"@en\}'\
\pard\pardeftab720\sl280\partightenfactor0

\f0\b\fs24 \cf2 \cb1 or use
\f2\b0\fs21\fsmilli10667 \cf3 \cb4 \
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs24 \cf2 \cb1 Specific search for literal form (e.g. including dissambiguation parenthesis). requires cleaned data.
\f2\fs21\fsmilli10667 \cf3 \cb4 \
\pard\pardeftab720\partightenfactor0
\cf3 'http://vocab.getty.edu/sparql.json?query=select+distinct*\{?uri+skos:inScheme+aat:;gvp:prefLabelGVP/xl:literalForm"' + escape(value, 'url') + '"@en\}'\
\pard\pardeftab720\partightenfactor0
\cf3 \cb1 \
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs24 \cf2 Parse the returned JSON to get the URL to the term that contains the ID using the \'93edit cell - > transform\'94\
\pard\pardeftab720\partightenfactor0

\f2\fs21\fsmilli10667 \cf3 \cb4 value.parseJson().results.bindings[0].uri.value
\f1\fs24 \cf2 \cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 Strip out the ID value\
\pard\pardeftab720\partightenfactor0

\f2\fs21\fsmilli10667 \cf3 \cb4 value[27,37]
\f1\fs24 \cf2 \cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
(Can use this single line)\
\pard\pardeftab720\partightenfactor0

\f2\fs21\fsmilli10667 \cf3 \cb4 value.parseJson().results.bindings[0].uri.value[27,37]
\f1\fs24 \cf2 \cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
Then use below queries to pull out the parents string ad full description in the scope notes for further processing\
\
\
\
\
\pard\pardeftab720\sl280\partightenfactor0

\f0\b \cf2 SPARQL query for returning parents and scopenote description based on an ID (ebony in this case) from the getty endpoint (not coded for URL parsing)\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0 \cf2 \
select ?Subject ?Term ?Parents ?Descr ?ScopeNote ?Type (coalesce(?Type1,?Type2) as ?ExtraType) \{\
  ?Subject dc:identifier"300012055"; a ?typ.\
  ?typ rdfs:subClassOf gvp:Subject; rdfs:label ?Type.\
  filter (?typ != gvp:Subject)\
  optional \{?Subject gvp:placeTypePreferred [gvp:prefLabelGVP [xl:literalForm ?Type1]]\}\
  optional \{?Subject gvp:agentTypePreferred [gvp:prefLabelGVP [xl:literalForm ?Type2]]\}\
  optional \{?Subject gvp:prefLabelGVP [xl:literalForm ?Term]\}\
  optional \{?Subject gvp:parentStringAbbrev ?Parents\}\
  optional \{?Subject foaf:focus/gvp:biographyPreferred/schema:description ?Descr\}\
  optional \{?Subject skos:scopeNote [dct:language gvp_lang:en; rdf:value ?ScopeNote]\}\}\
\
\
\pard\pardeftab720\sl280\partightenfactor0

\f0\b \cf2 SPARQL query for returning parents and scopenote description based on an ID (ebony in this case) from the getty endpoint (not coded for URL parsing)
\f1\b0 \

\f0\b URL coded SPARQL query for use in openrefine. - note \'91\'92 can cause issues
\f1\b0 \
\
'http://vocab.getty.edu/sparql.json?query=select*\{?Subject+dc:identifier"300012055";+a+?typ.+?typ+rdfs:subClassOf+gvp:Subject;+rdfs:label+?Type.+filter+(?typ+!=+gvp:Subject)+optional+\{?Subject+gvp:placeTypePreferred+[gvp:prefLabelGVP+[xl:literalForm+?Type1]]\}+optional+\{?Subject+gvp:agentTypePreferred+[gvp:prefLabelGVP+[xl:literalForm+?Type2]]\}+optional+\{?Subject+gvp:prefLabelGVP+[xl:literalForm+?Term]\}+optional+\{?Subject+gvp:parentStringAbbrev+?Parents\}+optional+\{?Subject+foaf:focus/gvp:biographyPreferred/schema:description+?Descr\}+optional+\{?Subject+skos:scopeNote+[dct:language+gvp_lang:en;+rdf:value+?ScopeNote]\}\}\'92\
\
\
\
\

\f0\b SPARQL query for returning parents and scopenote description based on an ID (value in existing column) from the getty endpoint (not coded for URL parsing)
\f1\b0 \

\f0\b URL coded SPARQL query for use in openrefine. - note \'91\'92 can cause issues\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0 \cf2 \
'http://vocab.getty.edu/sparql.json?query=select*\{?Subject+dc:identifier"' + value + '";+a+?typ.+?typ+rdfs:subClassOf+gvp:Subject;+rdfs:label+?Type.+filter+(?typ+!=+gvp:Subject)+optional+\{?Subject+gvp:placeTypePreferred+[gvp:prefLabelGVP+[xl:literalForm+?Type1]]\}+optional+\{?Subject+gvp:agentTypePreferred+[gvp:prefLabelGVP+[xl:literalForm+?Type2]]\}+optional+\{?Subject+gvp:prefLabelGVP+[xl:literalForm+?Term]\}+optional+\{?Subject+gvp:parentStringAbbrev+?Parents\}+optional+\{?Subject+foaf:focus/gvp:biographyPreferred/schema:description+?Descr\}+optional+\{?Subject+skos:scopeNote+[dct:language+gvp_lang:en;+rdf:value+?ScopeNote]\}\}'\
\
\
\
Once the fetch has been finished reuse the extraction formula used above to get the returned data.  but adapt to the returned json array.\
e.g.\
value.parseJson().results.bindings[0].Subject.value[27,37]\
will get the id.\
value.parseJson().results.bindings[0].ScopeNote.value\
will return the scopenote\
\
Use json pretify on a sample of downloaded data if your strugglign to read the returned array and get a better idea of headings required.\
\
\
\
\
\
\
\
\
\
\
\pard\pardeftab720\sl280\partightenfactor0

\f0\b \cf2 Example Sparql query for Wikidata\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0 \cf2 #Cats\
SELECT ?item ?itemLabel \
WHERE \
\{\
  ?item wdt:P31 wd:Q146.\
  SERVICE wikibase:label \{ bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". \}\
\}\
\
'
\f3\fs28 \cf5 \cb6 https://query.wikidata.org/sparql?query=SPARQL
\f1\fs24 \cf2 \cb1 ?query=select*\{?item}