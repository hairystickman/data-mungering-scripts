{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red27\green29\blue31;\red235\green236\blue237;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c14118\c15294\c16078;\cssrgb\c93725\c94118\c94510;
}
{\info
{\author gapantos}}\paperw11900\paperh16840\margl1440\margr1440\vieww15660\viewh10020\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
IMPORTANT!! don\'92t delete words split into multi cell value as it deletes subsequent values!! Use space instead\
\pard\pardeftab720\sl280\partightenfactor0

\b0 \cf2 then use value.replace("; ;",";") to correct the extra spaces\
(nb unsure, may not be but to be sure)
\b \
\
\
Combining columns example.\
Use when adding column based on another.\
\

\b0 "artefact (photograph);" + value + if ( cells["Other keywords"] != null , ";" + cells["Other keywords"].value , "")\
\
\
if(value !=null, if(cells["
\i \cf2 description reduced
\i0 \cf2 "].value != null, value + ";" + cells["
\i \cf2 description reduced
\i0 \cf2 "].value, value), if(cells["
\i \cf2 description reduced
\i0 \cf2 "].value != null, cells["
\i \cf2 description reduced
\i0 \cf2 "].value,''))\
\
\
\
\
\pard\pardeftab720\sl280\partightenfactor0

\b \cf2 Remove trailing   . 
\b0 \
value.replace(/\\.$/,'')\
\

\b Remove leading    .
\b0 \
value.replace(/^\\./,\'92\'92)\
\
\

\b remove all    .
\b0 \
value.replace(/\\./,\'92\'92)\
\
\
\

\b removing duplicates in string list in column cells.\
In Jython
\b0 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf3 \cb4 deduped_list = list(set(value.split(";")))\
return ';'.join(map(str, deduped_list))\
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs28 \cf2 \cb1 \
\
deduped_list = list(set(value.split(",")))\
return ', '.join(map(str, deduped_list))\
\
https://stackoverflow.com/questions/15419080/openrefine-remove-duplicates-from-list-with-jython\
\
\
\pard\pardeftab720\sl280\partightenfactor0

\b \cf2 Find and replace (cells-transform)\
\pard\pardeftab720\sl280\partightenfactor0

\b0 \cf2 value.replace("B2","B 2")\
\
\pard\pardeftab720\sl280\partightenfactor0

\b \cf2 facet by Custom number range (uses custom text facet)
\b0 \
if(value < 300157,if (value > 300135, true,false) ,false )}