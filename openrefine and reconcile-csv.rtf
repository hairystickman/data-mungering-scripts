{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red242\green242\blue242;\red0\green0\blue0;
\red56\green91\blue1;\red242\green242\blue242;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c95825;\csgray\c0\c84139;
\cssrgb\c27843\c42353\c0;\cssrgb\c96078\c96078\c96078;}
{\info
{\author gapantos}}\paperw11900\paperh16840\margl1440\margr1440\vieww15660\viewh10020\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
A java tool for fuzzy matching words to a local vocab list.\
\
Use for typo correction of keywords and reconciling with getty aat id (or parent hierarchy for lightroom hierarchy keywording)\
Note: will become unnecessary when getty reconcile service comes online (late 2018?) but useful for intra project data linking\
\
See also \
Reconcile-csv - join dirty data - Open Knowledge Foundation Labs.pdf\
for detail instructions\
\
\pard\pardeftab720\sl280\partightenfactor0

\b0 \cf2 1:/ launch reconcile-csv-0.1.2.jar in terminal (see screenshot/pdf for details)\
e.g. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f1\fs20 \cf3 \cb4 \kerning1\expnd0\expndtw0 \CocoaLigature0  java -Xmx2g -jar /Users/hairyfreak/Documents/Data\\ mungering/open\\ refine\\ notes\\ and\\ addons/reconcile-csv/reconcile-csv-0.1.2.jar LOOKUP_FILE \{NAME\} \{ID\} \
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs28 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
2:/ load data in openrefine\
\
3:/ select column to reconile and \'93start reconcile\'94\
\
4:/ add service http://localhost:8000/reconcile\
\
5:/ wait\
\
6:/ select best fit matches or set as something else if not wanted etc.\
\
7:/ use facets to show un-matched words to simplify reconciling (see screenshot)\
\
8:  set matched values to those in lookup list with\
\pard\pardeftab720\sl280\partightenfactor0

\b \cf2 cell.recon.match.name
\b0 \
(use  cell.recon.candidates[0].name  to get the top candidate)\
\
9:/ make new column from reconiled values using \'91add based on data in this column\'92 and: \
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs32 \cf5 \cb6 cell.recon.match.id\
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs28 \cf2 \cb1 or add to existing cell with \
\
\pard\pardeftab720\sl280\partightenfactor0

\i\b \cf2 cells['Photo number'].recon.match.id
\b0 \
\
\

\b NOTE.  using this on the original will set the cell to NULL if no match, or set as new even if you say 'use original'.\
either filter before running the edit or use\
if(cell.recon.match.name != null, cell.recon.match.name, value)
\b0 \
\
example of adding to column with existing values (note \'93\'94 for return of recon.match  etc as it gives an empty string)\
if(value != null, if( cells['Feature'].recon.match.id != "", value + ";" + cells['Feature'].recon.match.id, value) ,cells['Feature'].recon.match.id)\
\
\
\
\
Reconciling project terms\
NKRF project terminology > research areas > Wadi el Bariya > WB1 > Shafts (NKRF class) >\
}