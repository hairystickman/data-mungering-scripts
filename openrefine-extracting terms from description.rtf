{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red12\green0\blue192;\red239\green239\blue239;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c6667\c6667\c80000;\cssrgb\c94902\c94902\c94902;
}
{\info
{\author gapantos}}\paperw11900\paperh16840\margl1440\margr1440\vieww21020\viewh17320\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Disassemble copy of description column (called 'keyword extraction') into parts for extracting keywords.\
Removes punctuation, changes to lowercase then splits on space and then remove some common terms.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Make lowercase (built in action)
\b0 \
\

\b Remove certain non useful words (see below)
\b0 \
\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b\fs28 \cf2 \expnd0\expndtw0\kerning0
Remove trailing   . 
\b0 \
value.replace(/\\.$/,'')
\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Remove trailing ;
\b0 \
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs28 \cf2 \expnd0\expndtw0\kerning0
value.replace(/\\;$/,'')\
\

\b Remove brackets
\b0 \
value.replace("(""," ")\
value.replace(")"," ")
\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 trim white spaces (built in action)
\b0 \
\

\b remove double spaces (built in action)
\b0 \
\
then manually\
cluster and edit\
and reconcile against the keyword list.
\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 list of words removed with commands below
\b0 \
\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf3 \cb4 \expnd0\expndtw0\kerning0
a\
at\
of\
and\
it\
in
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \

\f2\fs26 \cf3 \cb4 \expnd0\expndtw0\kerning0
where\
when\
to\
the\
it\
in\
with\
under\
inside\
next\
for\
and\
on\
will\
type\
show\
shows\
showing\
shape\
shallow\
see\
sand\
said\
roughly\
region\
photo\
very\
overhang\
note\
noted\
no\
motif\
motifs\
like\
lit\
image\
land\
beneath\
below\
behind\
as\
begin\
all\
\
\
\
[\
\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\ban\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\ban\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bup\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bup\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\ba\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\ba\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bof\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bof\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bat\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bat\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\band\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bit\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bin\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bwhere\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bwhen\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bthe\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bit\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bin\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bwith\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bunder\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\binside\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bnext\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bfor\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\band\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bon\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bwill\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\btype\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bshow\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bshows\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bshowing\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bshape\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bshallow\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bsee\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bsand\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bsaid\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\broughly\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bregion\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bphoto\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bvery\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\boverhang\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bnote\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bnoted\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bno\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bmotif\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bmotifs\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\blike\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\blit\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bimage\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bland\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bbeneath\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bbelow\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bbehind\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bas\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\bbegin\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
\{\
  "op": "core/text-transform",\
  "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\bto\\\\b/,\\" \\")",\
  "engineConfig": \{\
    "mode": "record-based",\
      "facets": []\
  \},\
  "columnName": "keyword extraction",\
  "expression": "grel:value.replace(/\\\\ball\\\\b/,\\" \\")",\
"onError": "keep-original",\
"repeat": false,\
"repeatCount": 10\
\},\
 \{\
    "op": "core/multivalued-cell-split",\
    "description": "Split multi-valued cells in column keyword extraction",\
    "columnName": "keyword extraction",\
    "keyColumnName": "Photo#",\
    "mode": "separator",\
    "separator": " ",\
    "regex": false\
  \},\
  \{\
    "op": "core/text-transform",\
    "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(\\")\\",\\" \\")",\
    "engineConfig": \{\
      "mode": "record-based",\
      "facets": []\
    \},\
    "columnName": "keyword extraction",\
    "expression": "grel:value.replace(\\")\\",\\" \\")",\
    "onError": "keep-original",\
    "repeat": false,\
    "repeatCount": 10\
  \},\
  \{\
    "op": "core/text-transform",\
    "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(\\"(\\",\\" \\")",\
    "engineConfig": \{\
      "mode": "record-based",\
      "facets": []\
    \},\
    "columnName": "keyword extraction",\
    "expression": "grel:value.replace(\\"(\\",\\" \\")",\
    "onError": "keep-original",\
    "repeat": false,\
    "repeatCount": 10\
  \},\
  \{\
    "op": "core/text-transform",\
    "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\.$/,'')",\
    "engineConfig": \{\
      "mode": "record-based",\
      "facets": []\
    \},\
    "columnName": "keyword extraction",\
    "expression": "grel:value.replace(/\\\\.$/,'')",\
    "onError": "keep-original",\
    "repeat": false,\
    "repeatCount": 10\
  \},\
  \{\
    "op": "core/text-transform",\
    "description": "Text transform on cells in column keyword extraction using expression grel:value.replace(/\\\\;$/,'')",\
    "engineConfig": \{\
      "mode": "record-based",\
      "facets": []\
    \},\
    "columnName": "keyword extraction",\
    "expression": "grel:value.replace(/\\\\;$/,'')",\
    "onError": "keep-original",\
    "repeat": false,\
    "repeatCount": 10\
  \},\
  \{\
    "op": "core/text-transform",\
    "description": "Text transform on cells in column keyword extraction using expression value.trim()",\
    "engineConfig": \{\
      "mode": "record-based",\
      "facets": []\
    \},\
    "columnName": "keyword extraction",\
    "expression": "value.trim()",\
    "onError": "keep-original",\
    "repeat": false,\
    "repeatCount": 10\
  \}\
  \{\
    "op": "core/text-transform",\
    "description": "Text transform on cells in column keyword extraction using expression value.replace(/\\\\s+/,' ')",\
    "engineConfig": \{\
      "mode": "record-based",\
      "facets": []\
    \},\
    "columnName": "keyword extraction",\
    "expression": "value.replace(/\\\\s+/,' ')",\
    "onError": "keep-original",\
    "repeat": false,\
    "repeatCount": 10\
  \}\
]}